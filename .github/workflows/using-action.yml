# Note: make sure to use the same version of cypress-io/github-action
# in all jobs, otherwise the last version wins I believe
name: Using Cypress GH Action
# on: [push, pull_request]
on: 'push'
jobs:
  # single-run:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1
  #     - name: Cypress run
  #       uses: cypress-io/github-action@22f7a76
  #       with:
  #         build: npm run build
  #         start: npm start
  #         wait-on: http://localhost:8080

  # parallel-runs:
  #   name: Parallel 4x
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       # run 4 copies of the current job in parallel
  #       containers: [1, 2, 3, 4]
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v1

  #     # because of "record" and "parallel" parameters
  #     # these containers will load balance all found tests among themselves
  #     - name: run tests
  #       uses: cypress-io/github-action@22f7a76
  #       with:
  #         record: true
  #         parallel: true
  #         group: GH Action parallel
  #         start: npm start
  #       env:
  #         # pass the Dashboard record key as an environment variable
  #         CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}

  parallel-runs-across-platforms:
    name: every OS
    strategy:
      matrix:
        # run 2 copies of the current job in parallel
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
        containers: [1, 2]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      # because of "record" and "parallel" parameters
      # these containers will load balance all found tests among themselves
      - name: run tests
        uses: cypress-io/github-action@v1
        with:
          record: true
          parallel: true
          group: Parallel 2x on ${{ matrix.os }}
          # on Mac and Linux we can use "npm start"
          start: npm start
          # but for this particular project on Windows we need a different start command
          start-windows: npm run start:ci:windows
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.dashboardRecordKey }}
