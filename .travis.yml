language: node_js

node_js:
  - 8

env:
  global:
    - CYPRESS_INSTALL_BINARY=https://cdn.cypress.io/beta/binary/3.1.0/linux64/circle-develop-4ead424d4c9e3d65422c71597496539290720057-32310/cypress.zip
    - CYPRESS_ENV=staging

cache:
  directories:
    - ~/.npm
    - ~/.cache

before_install:
  - npm i -g npm@latest

install:
  - npm ci

before_script:
  ## print all Travis environment variables for debugging
  - $(npm bin)/print-env TRAVIS

  ## runs the 'start' script which
  ## boots our local app server on port 8080
  ## which cypress expects to be running
  ## -----------------------------------
  ## the '-- --silent' passes arguments
  ## to http-server which silences its output
  ## else our travis logs would be cluttered
  ## with output from HTTP requests
  ## https://docs.npmjs.com/cli/start
  ## https://github.com/indexzero/http-server
  ## ---------------------------------------
  ## we use the '&' ampersand which tells
  ## travis to run this process in the background
  ## else it would block execution and hang travis
  - npm start -- --silent &

script:
  ## now run cypress headlessly
  ## and record all of the tests.
  ## Cypress will search for a
  ## CYPRESS_RECORD_KEY environment
  ## variable by default and apply
  ## this to the run.
  - $(npm bin)/cypress run --record

  ## alternatively we could specify
  ## a specific record key to use
  ## like this without having to
  ## configure environment variables
  ## - cypress run --record --key <your_record_key>
